q()
n
a <- kmeans(dat$g)
ls()
boxplot(fit3$beta)
ls()
boxplot(fit4$beta)
boxplot(fit4$beta)
boxplot(fit5$beta)
dim(dat$g)
dim(na.omit(dat$g))
str(dat)
boxplot(dat$g)
boxplot(dat$g[dat$ind,])
ls()
q()
n
rep.gns
dat.g[1,]
dat.g[1,] - tmp$centers[,1]
dat.g[1,] - tmp$centers[1,]
tmp$centers[1,]
dat.g[1,]
tmp$centers[1,]
dat.g[1,] - tmp$centers[1,]
sum(dat.g[1,] - tmp$centers[1,])
rep.gns
rep.gns
unique(rep.gns)
length(unique(rep.gns))
dat.g[rep.gns,]
strsplit()
strsplit('a')
q()
n
q()
n
q()
n
q()
n
list('e1'=1, 'e2'=2 )
a <- list('e1'=1, 'e2'=2 )
a
a[[e1]] <- 10
a[['e1']] <- 10
a
a <- list(a, 'e5'=5)
a
rm a
rm(a)
a <- list('e1'=1, 'e2'=2 )
c(list(f=20), a)
a <- c(list(f=20), a)
a$f
a <- c(list(g=1:20), a)
a
str(cl.kmns)
str(cl.kmns$centers)
rep.gns
 dat.g[rep.gns]
 dat.g[rep.gns,]
names( dat.g[rep.gns,])
rownames( dat.g[rep.gns,])
rownames(rep.gns) <- rownames( dat.g[rep.gns,])
rep.gns
colnames(rep.gns) <- rownames( dat.g[rep.gns,])
str9rep.gns
 str(rep.gns)
names(rep.gns) <- rownames( dat.g[rep.gns,])
rep.gns
rep.gns[1]
q()
n
str(cl.kms)
str(cl.kmns)
rep.gns
dat.g[rep.gns,]
?matplot
cl.kmns$cluster
sample
sample(10,10)
sample(20,10)
matrix(sample(20,10), 5, 2)
names(dat.g)[1]
rownames(dat.g)[1]
sample(rownames(dat.g)[-rep.gns])
sample(rownames(dat.g)[-rep.gns],10)
length(rownames(dat.g)[-rep.gns])
length(rownames(dat.g))
?matrix
?matrix
getwd()
rust.clustering(dat.g, 10:11, km.k=7)
rownames(dat.g[rep.gns,])
rep.gns <- rownames(dat.g[rep.gns,])
rep.gns
length(rownames(dat.g)[-rep.gns])
length(rownames(dat.g)[-c(rep.gns)])
length(rownames(dat.g[-c(rep.gns)]))
length(rownames(dat.g[-rep.gns]))
length(rownames(dat.g[-rep.gns,]))
rep.gns
dat.g[-rep.gns)
dat.g[-rep.gns,]
size(dat.g[-(rep.gns),])
dat.g[(rep.gns),]
length(rownames(dat.g[-rep.gns,]))
plot(dat.g)
plot(t,dat.g)
t
?t
plot(dat$t,dat.g)
length(rownames(dat.g[!%in$ rep.gns,]))
length(rownames(dat.g[!rownames(dat.g) %in$ rep.gns,]))
str(rownames(dat.g[!rownames(dat.g) %in$ rep.gns,]))
str(rownames(dat.g[!rownames(dat.g) %in$ rep.gns,]))%
str(rownames(dat.g[!rownames(dat.g) %in% rep.gns,]))
length(rownames(dat.g[!rownames(dat.g) %in% rep.gns,]))
length(rownames(dat.g[!%in% rep.gns,]))
rust.clustering(dat.g, 10:11, km.k=7)
source("func_rust.r")
 tmp <- rust.clustering(dat.g, 10:11, km.k=7)
str(tmp)
names(tmp$rand.sample)
names(tmp$rand.sample) <- paste('genes',10:11)
names(tmp$rand.sample)
tmp$rand.sample['genes 10']
q()
n
